


Network Working Group                                     C. Scholz, Ed.
Internet-Draft                                           COM.lounge GmbH
Intended status: Standards Track                                E. Maler
Expires: January 9, 2011                                          PayPal
                                                            July 8, 2010


               The OAuth Dynamic Client Binding Protocol
                     draft-oauth-binding-v1-00.txt

Abstract

   This specification describes the OAuth Dynamic Client Binding
   protocol.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on January 9, 2011.

Copyright Notice

   Copyright (c) 2010 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.





Scholz & Maler           Expires January 9, 2011                [Page 1]

Internet-Draft        OAuth Dynamic Client Binding0            July 2010


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . 3
     1.1.  Notational Conventions  . . . . . . . . . . . . . . . . . . 3
     1.2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . 3
   2.  Requirements  . . . . . . . . . . . . . . . . . . . . . . . . . 4
     2.1.  The client needs to be uniquely identifiable by the
           authorization server  . . . . . . . . . . . . . . . . . . . 4
     2.2.  The authorization server must be able to retrieve
           metadata about a client for later user interaction  . . . . 4
     2.3.  The authorization server must have the option of
           strongly authenticating the client and its metadata . . . . 4
     2.4.  Automatic client binding must also be possible from
           applications running on mobile devices  . . . . . . . . . . 4
     2.5.  Data integrity must be ensured in large deployments
           where data propagation can be an issue  . . . . . . . . . . 5
   3.  Binding Flows . . . . . . . . . . . . . . . . . . . . . . . . . 5
     3.1.  Providing client information on every request and not
           using client credentials at all.  . . . . . . . . . . . . . 5
     3.2.  The client pushes client information to the
           authorization server which returns client credentials . . . 5
     3.3.  The authorization server pulls information from the
           client and returns client credentials . . . . . . . . . . . 6
   4.  Security Considerations . . . . . . . . . . . . . . . . . . . . 6
   Appendix A.  Examples . . . . . . . . . . . . . . . . . . . . . . . 6
   Appendix B.  Contributors . . . . . . . . . . . . . . . . . . . . . 6
   Appendix C.  Acknowledgements . . . . . . . . . . . . . . . . . . . 6
   Appendix D.  Document History . . . . . . . . . . . . . . . . . . . 6
   5.  Normative References  . . . . . . . . . . . . . . . . . . . . . 7
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . . . 7





















Scholz & Maler           Expires January 9, 2011                [Page 2]

Internet-Draft        OAuth Dynamic Client Binding0            July 2010


1.  Introduction

   In some scenarios it is necessary to allow OAuth clients to use an
   authorization server without being known to the server before.
   Nevertheless for the authorization server to work properly and be
   able to provide the user details about the client requesting
   authorization, a way of automatic registration is needed.  The goal
   should be to provide the client with a client id and eventually a
   client secret from the server and the authorization server with
   information about the client such at minimum with it's name.  More
   likely though more information is necessary such as the homepage,
   icon, description, company etc.  This informal draft tries to present
   different ways of achieving this exchange of information.

1.1.  Notational Conventions

   The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL NOT',
   'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'MAY', and 'OPTIONAL' in this
   document are to be interpreted as described in [RFC2119].

   This document uses the Augmented Backus-Naur Form (ABNF) notation of
   [I-D.ietf-httpbis-p1-messaging].  Additionally, the realm and auth-
   param rules are included from [RFC2617].

   Unless otherwise noted, all the protocol parameter names and values
   are case sensitive.

1.2.  Terminology

   resource server
         A server capable of accepting and responding to protected
         resource requests.

   client
         An application obtaining authorization and making protected
         resource requests.

   authorization server
         A server capable of issuing tokens after successfully
         authenticating the resource owner and obtaining authorization.
         The authorization server may be the same server as the resource
         server, or a separate entity.

   end-user authorization endpoint
         The authorization server's HTTP endpoint capable of
         authenticating the end-user and obtaining authorization.





Scholz & Maler           Expires January 9, 2011                [Page 3]

Internet-Draft        OAuth Dynamic Client Binding0            July 2010


   token endpoint
         The authorization server's HTTP endpoint capable of issuing
         tokens and refreshing expired tokens.

   client identifier
         An unique identifier issued to the client to identify itself to
         the authorization server.  Client identifiers may have a
         matching secret.


2.  Requirements

2.1.  The client needs to be uniquely identifiable by the authorization
      server

   In order for an authorization server to do proper user delegated
   authorization it must be able to identify clients in order to prevent
   unauthorized access, e.g. if just a client name is given.  Like today
   the client credentials should thus be provided by the authorization
   server and not proposed by the client.

2.2.  The authorization server must be able to retrieve metadata about a
      client for later user interaction

   In order for the authorization server to describe a client to the
   user in the authorization step it needs information about the client.
   This can be the client name at a minimum but today servers usually
   request at least a description, a homepage URL and an icon when doing
   manual registration.

2.3.  The authorization server must have the option of strongly
      authenticating the client and its metadata

   In order to prevent spoofing of clients the authorization server
   should have the option to verify the provided information to check if
   it's valid.  This might be solved using certificates or in a simpler
   way by pulling from the client URL e.g. via hostmeta discovery.

2.4.  Automatic client binding must also be possible from applications
      running on mobile devices

   Information cannot be pushed to mobile devices, so the two solutions
   are providing information in a response to a push and doing polling.
   The latter is not resource friendly though.







Scholz & Maler           Expires January 9, 2011                [Page 4]

Internet-Draft        OAuth Dynamic Client Binding0            July 2010


2.5.  Data integrity must be ensured in large deployments where data
      propagation can be an issue

   When e.g. pushing information from a client to a server endpoint it
   might take a certain amount of time for this data to propagate
   through big installation over various data centers.  Care needs to be
   taken that subsequent actions after the registration process like an
   authorization request show the correct data. (how would a pull look
   like here as it's always the client which needs to start the process)


3.  Binding Flows

   There are different approaches one can take to exchange client
   information with client credentials.

3.1.  Providing client information on every request and not using client
      credentials at all.

   In this approach all necessary client information like client_name or
   client_icon is passed on every request to the authorization server to
   display it to the user if necessary.

   This violates the first requirement though.  No client credentials
   are actually provided which also violates the OAuth specification as
   it is now.

3.2.  The client pushes client information to the authorization server
      which returns client credentials

   The client discovers the registration endpoint of the authorization
   server and sends it's client information to that endpoint in JSON
   format.  The authorization server answers with client credentials in
   the response.

   Authorization is possible here as the client information could be
   signed with the clients secret key and could contain a URL to the
   client homepage which could contain a discoverable public key.  This
   involves PKI though which is hard to implement.

   Moreover it might violate the propagation requirement as the
   information might be pushed to a server far away from the server the
   user gets send to in the next step which migth not know the client
   credentials yet.







Scholz & Maler           Expires January 9, 2011                [Page 5]

Internet-Draft        OAuth Dynamic Client Binding0            July 2010


3.3.  The authorization server pulls information from the client and
      returns client credentials

   In this version the client sends a URL to the authorization server
   which then uses that information to pull metadata about the client
   e.g. via XRD.  It then will create client credentials and return them
   in the response to the initial request.

   This does not directly solve the propagation issue as it's still a
   push to some server of the authorization server cluster and not bound
   to the user interaction.


4.  Security Considerations


Appendix A.  Examples

   [[ todo ]]


Appendix B.  Contributors

   The following people contributed to preliminary versions of this
   document:

   The User Managed Access Working Group has dozens of very active
   contributors who proposed ideas and wording for this document,
   including: [[ If your name is missing or you think someone should be
   added here, please send Eran a note - don't be shy ]]

   [[ todo ]]


Appendix C.  Acknowledgements

   [[ Add OAuth 2.0 authors + WG contributors ]]


Appendix D.  Document History

   [[ to be removed by RFC editor before publication as an RFC ]]

   -01

   o  started the spec.





Scholz & Maler           Expires January 9, 2011                [Page 6]

Internet-Draft        OAuth Dynamic Client Binding0            July 2010


5.  Normative References

   [I-D.ietf-httpbis-p1-messaging]
              Fielding, R., Gettys, J., Mogul, J., Nielsen, H.,
              Masinter, L., Leach, P., Berners-Lee, T., and J. Reschke,
              "HTTP/1.1, part 1: URIs, Connections, and Message
              Parsing", draft-ietf-httpbis-p1-messaging-09 (work in
              progress), March 2010.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC2617]  Franks, J., Hallam-Baker, P., Hostetler, J., Lawrence, S.,
              Leach, P., Luotonen, A., and L. Stewart, "HTTP
              Authentication: Basic and Digest Access Authentication",
              RFC 2617, June 1999.


Authors' Addresses

   Christian Scholz (editor)
   COM.lounge GmbH

   Email: cs@comlounge.net
   URI:   http://comlounge.net


   Eve Maler
   PayPal

   Email: eve@xmlgrrl.com
   URI:   http://www.paypal.com/



















Scholz & Maler           Expires January 9, 2011                [Page 7]

